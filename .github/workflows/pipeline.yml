# vim: syntax=yaml
---

name: "üö∞ Pipeline"

on:

  # GIT PUSH
  push:
    branches:
      - "main"

  # MANUAL WORKFLOW
  workflow_dispatch:
    inputs:
      log_level:
        type: "choice"
        default: "warning"
        required: true
        description: "Log level for debugging the github workflow"
        options:
          - "info"
          - "debug"
          - "warning"

# SETUP PERMISSIONS
permissions:
  actions: "read"
  id-token: "write"
  contents: "read"
  security-events: "write"

# PIPELINE STEPS
jobs:

  # CREATE DOCKER CONTAINER TO SENT TO ECS
  build_docker_image:
      name: "üê≥ Build Docker Image"
      runs-on: "ubuntu-latest"
      steps:
        # https://github.com/actions/checkout
        - uses: "actions/checkout@v3"
        # https://github.com/actions/setup-node
        - uses: "actions/setup-node@v3"
          with:
            node-version: "14.21.3"
        # https://github.com/docker/login-action
        # - uses: "docker/login-action@v2"
        #   with:
        #     registry: ""
        # https://github.com/docker/setup-qemu-action
        - uses: "docker/setup-qemu-action@v1"
        # https://github.com/docker/setup-buildx-action
        - uses: "docker/setup-buildx-action@v1"
        # https://github.com/docker/build-push-action
        - uses: "docker/build-push-action@v3"
          with:
            push: false
            # tags: |
            #   ${{ inputs.docker_ecs_registry_name }}:latest
            context: "."
            # build-args: |
            #   jar_name=${{ inputs.app_jar_name }}
            #

  # DEPLOY THE ECS REQUIRED INFRASTRUCTURE
  # deploy_terraform_infrastructure:
  #     name: "‚òÑÔ∏è Deploy Terraform Infrastructure"
  #     needs:
  #       - "build_docker_image"
  #     runs-on: "ubuntu-latest"
  #     steps:
  #       # https://github.com/actions/checkout
  #       - uses: "actions/checkout@v3"
  #       # https://github.com/hashicorp/setup-terraform
  #       - uses: "hashicorp/setup-terraform@v2"
  #         with:
  #           terraform_version: "1.1.7"
  #       - name: "Deploy infrastructure"
  #         env:
  #           AWS_REGION: "eu-west-1"
  #           AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  #           AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
  #         run: |
  #           cd ./terraform
  #           terraform init
  #           terraform plan
  #           # terraform apply --auto-aprove
